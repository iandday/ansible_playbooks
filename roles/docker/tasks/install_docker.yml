---
#
# roles/docker/tasks/main.yml
#

- name: add package repo key(s)
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present
  become: true

- name: add package repo source(s)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu noble stable"
    state: present
  become: true

- name: install packages
  apt:
    name: "{{ item }}"
    update-cache: true
  loop: "{{ docker_apt_packages }}"
  become: true

- name: change docker group id
  group:
    name: docker
    state: present
    gid: "{{ docker_gid }}"
  become: true

- name: create docker user
  become: true
  user:
    name: "{{ docker_user }}"
    group: "{{ docker_gid }}"
    system: yes

- name: start docker at boot
  systemd:
    name: docker
    state: started
    enabled: yes
  become: true

- name: create docker networks
  docker_network:
    name: "{{ item }}"
  with_items: "{{ docker_networks }}"
  when: docker_networks is defined
  become: true

- name: create docker directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ docker_uid }}"
    group: "{{ docker_gid }}"
  become: true
  with_items:
    - "{{ all_docker_builds }}"
    - "{{ all_docker_storage }}"

- name: mount backup share
  include_role:
    name: common
    tasks_from: mount_share
  vars:
    mount_src: "{{ all_nas_backup }}"
    mount_dest: "{{ all_backup_root }}"
    mount_username: "{{ docker_backup_username }}"
    mount_password: "{{ docker_backup_password }}"
    mount_uid: "{{ docker_uid }}"
    mount_gid: "{{ docker_gid }}"
    mount_options: ",file_mode=0700,dir_mode=0700,nounix"

- name: create backup directory
  file:
    path: "{{ docker_backup_dir }}"
    state: directory
    mode: 0700
    owner: "{{ docker_uid }}"
    group: "{{ docker_gid }}"
  become: true

- name: copy backup script
  template:
    src: backup_docker_volumes.sh.j2
    dest: /usr/local/bin/backup_docker_volumes.sh
    mode: "a+x"
  become: true
  when: "'docker-infra-01' in inventory_hostname"

- name: copy backup script
  template:
    src: backup_docker_volumes_frigate.sh.j2
    dest: /usr/local/bin/backup_docker_volumes.sh
    mode: "a+x"
  become: true
  when: "'frigate' in inventory_hostname"

- name: setup backup cronjob
  cron:
    name: "Backup docker volumes"
    job: "/usr/local/bin/backup_docker_volumes.sh"
    user: root
    cron_file: backup_docker_volumes
    hour: "2"
    minute: "5"
    day: "{{ docker_backup_day }}"
  become: true

- name: configure backup rotation
  include_role:
    name: common
    tasks_from: rotate_backups
  vars:
    - cron_user: root
    - backup_path: "{{ docker_backup_dir }}"
