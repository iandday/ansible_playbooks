# {{ ansible_managed }}

services:
  wedding-postgres:
    image: postgres:17.4
    container_name: wedding-postgres
    volumes:
      - {{ docker_wedding_docker_storage }}/wedding_db:/var/lib/postgresql/data
    networks:
      - traefik_proxy
    environment:
      - POSTGRES_USER={{ vault_docker_wedding_db_username }}
      - POSTGRES_PASSWORD={{ vault_docker_wedding_db_password }}
      - POSTGRES_DB=wedding
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ vault_docker_wedding_db_username }}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    labels:
      - "traefik.enable=false"
  redis:
    image: redis:7.0
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    volumes:
      - {{ docker_wedding_docker_storage }}/wedding_redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
  wedding-app:
    image: ghcr.io/iandday/okletsdoit:develop
    container_name: wedding-app
    restart: always
    environment:
      - POSTGRES_USER={{ vault_docker_wedding_db_username }}
      - POSTGRES_PASSWORD={{ vault_docker_wedding_db_password }}
      - POSTGRES_DB=wedding
      - POSTGRES_HOST=wedding-postgres
      - POSTGRES_PORT=5432
      - SECRET_KEY={{ vault_docker_wedding_secret_key }}
      - DEBUG=False
      - DJANGO_LOG_LEVEL=INFO
      - ALLOWED_HOSTS={{ vault_docker_wedding_allowed_hosts }}
      - TIMEZONE=America/New_York
      - DJANGO_SUPERUSER_EMAIL={{ vault_docker_wedding_admin_email }}
      - DJANGO_SUPERUSER_PASSWORD={{ vault_docker_wedding_admin_password }}
      - AUTHENTIK_URL={{ vault_docker_wedding_auth_url }}
      - AUTHENTIK_CLIENT_ID={{ vault_docker_wedding_auth_client_id }}
      - AUTHENTIK_CLIENT_SECRET={{ vault_docker_wedding_auth_client_secret }}
      - DJANGO_CSRF_TRUSTED_ORIGINS={{ vault_docker_wedding_csrf_trusted_origins }}
      - AWS_ACCESS_KEY_ID={{ vault_docker_wedding_aws_access_key_id }}
      - AWS_SECRET_ACCESS_KEY={{ vault_docker_wedding_aws_secret_access_key }}
      - AWS_STATIC_BUCKET_NAME={{ vault_docker_wedding_aws_static_bucket_name }}
      - AWS_MEDIA_BUCKET_NAME={{ vault_docker_wedding_aws_media_bucket_name }}
      - AWS_S3_REGION_NAME={{ vault_docker_wedding_aws_s3_region_name }}
      - AWS_S3_ENDPOINT_URL={{ vault_docker_wedding_aws_s3_endpoint_url }}
      - AWS_S3_STATIC_DOMAIN={{ vault_docker_wedding_aws_s3_static_domain }}
      - AWS_S3_MEDIA_DOMAIN={{ vault_docker_wedding_aws_s3_media_domain }}
      - AWS_S3_STATIC_DOMAIN_CSP={{ vault_docker_wedding_aws_s3_static_domain_csp }}
      - CONTAINER_ROLE=server
      - LOCAL_DEV=True
      - REDIS_URL=redis://redis:6379
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=false"
    depends_on:
      - wedding-postgres
  wedding-worker:
    image: ghcr.io/iandday/okletsdoit:develop
    container_name: wedding-worker
    restart: always
    environment:
      - POSTGRES_USER={{ vault_docker_wedding_db_username }}
      - POSTGRES_PASSWORD={{ vault_docker_wedding_db_password }}
      - POSTGRES_DB=wedding
      - POSTGRES_HOST=wedding-postgres
      - POSTGRES_PORT=5432
      - SECRET_KEY={{ vault_docker_wedding_secret_key }}
      - DEBUG=False
      - DJANGO_LOG_LEVEL=INFO
      - ALLOWED_HOSTS={{ vault_docker_wedding_allowed_hosts }}
      - TIMEZONE=America/New_York
      - DJANGO_SUPERUSER_EMAIL={{ vault_docker_wedding_admin_email }}
      - DJANGO_SUPERUSER_PASSWORD={{ vault_docker_wedding_admin_password }}
      - AUTHENTIK_URL={{ vault_docker_wedding_auth_url }}
      - AUTHENTIK_CLIENT_ID={{ vault_docker_wedding_auth_client_id }}
      - AUTHENTIK_CLIENT_SECRET={{ vault_docker_wedding_auth_client_secret }}
      - DJANGO_CSRF_TRUSTED_ORIGINS={{ vault_docker_wedding_csrf_trusted_origins }}
      - AWS_ACCESS_KEY_ID={{ vault_docker_wedding_aws_access_key_id }}
      - AWS_SECRET_ACCESS_KEY={{ vault_docker_wedding_aws_secret_access_key }}
      - AWS_STATIC_BUCKET_NAME={{ vault_docker_wedding_aws_static_bucket_name }}
      - AWS_MEDIA_BUCKET_NAME={{ vault_docker_wedding_aws_media_bucket_name }}
      - AWS_S3_REGION_NAME={{ vault_docker_wedding_aws_s3_region_name }}
      - AWS_S3_ENDPOINT_URL={{ vault_docker_wedding_aws_s3_endpoint_url }}
      - AWS_S3_STATIC_DOMAIN={{ vault_docker_wedding_aws_s3_static_domain }}
      - AWS_S3_MEDIA_DOMAIN={{ vault_docker_wedding_aws_s3_media_domain }}
      - AWS_S3_STATIC_DOMAIN_CSP={{ vault_docker_wedding_aws_s3_static_domain_csp }}
      - CONTAINER_ROLE=worker
      - LOCAL_DEV=True
      - REDIS_URL=redis://redis:6379
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=false"
    depends_on:
      - wedding-postgres
  wedding-beats:
    image: ghcr.io/iandday/okletsdoit:develop
    container_name: wedding-beats
    restart: always
    environment:
      - POSTGRES_USER={{ vault_docker_wedding_db_username }}
      - POSTGRES_PASSWORD={{ vault_docker_wedding_db_password }}
      - POSTGRES_DB=wedding
      - POSTGRES_HOST=wedding-postgres
      - POSTGRES_PORT=5432
      - SECRET_KEY={{ vault_docker_wedding_secret_key }}
      - DEBUG=False
      - DJANGO_LOG_LEVEL=INFO
      - ALLOWED_HOSTS={{ vault_docker_wedding_allowed_hosts }}
      - TIMEZONE=America/New_York
      - DJANGO_SUPERUSER_EMAIL={{ vault_docker_wedding_admin_email }}
      - DJANGO_SUPERUSER_PASSWORD={{ vault_docker_wedding_admin_password }}
      - AUTHENTIK_URL={{ vault_docker_wedding_auth_url }}
      - AUTHENTIK_CLIENT_ID={{ vault_docker_wedding_auth_client_id }}
      - AUTHENTIK_CLIENT_SECRET={{ vault_docker_wedding_auth_client_secret }}
      - DJANGO_CSRF_TRUSTED_ORIGINS={{ vault_docker_wedding_csrf_trusted_origins }}
      - AWS_ACCESS_KEY_ID={{ vault_docker_wedding_aws_access_key_id }}
      - AWS_SECRET_ACCESS_KEY={{ vault_docker_wedding_aws_secret_access_key }}
      - AWS_STATIC_BUCKET_NAME={{ vault_docker_wedding_aws_static_bucket_name }}
      - AWS_MEDIA_BUCKET_NAME={{ vault_docker_wedding_aws_media_bucket_name }}
      - AWS_S3_REGION_NAME={{ vault_docker_wedding_aws_s3_region_name }}
      - AWS_S3_ENDPOINT_URL={{ vault_docker_wedding_aws_s3_endpoint_url }}
      - AWS_S3_STATIC_DOMAIN={{ vault_docker_wedding_aws_s3_static_domain }}
      - AWS_S3_MEDIA_DOMAIN={{ vault_docker_wedding_aws_s3_media_domain }}
      - AWS_S3_STATIC_DOMAIN_CSP={{ vault_docker_wedding_aws_s3_static_domain_csp }}
      - CONTAINER_ROLE=beats
      - LOCAL_DEV=True
      - REDIS_URL=redis://redis:6379
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=false"
    depends_on:
      - wedding-postgres
  wedding-nginx:
    image: nginx:latest
    container_name: wedding-nginx
    volumes:
      - {{ docker_wedding_docker_storage }}/wedding_nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - traefik_proxy
    environment:
      - DJANGO_HOST=wedding-app
      - DJANGO_PORT=8000
      - NGINX_SERVER_NAME=wedding.{{ all_ext_domain }}
      - NGINX_CLIENT_MAX_BODY_SIZE=100M
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.http.routers.wedding-secure.entrypoints=web-secure"
      - "traefik.http.routers.wedding-secure.rule=Host(`wedding.{{ all_ext_domain }}`)"
      - "traefik.http.routers.wedding-secure.tls=true"
      - "traefik.http.routers.wedding-secure.tls.certresolver=route53"
      - "traefik.http.routers.wedding-secure.tls.domains[0].main={{ all_ext_domain }}"
      - "traefik.http.routers.wedding-secure.tls.domains[0].sans=*.{{ all_ext_domain }}"
      - "traefik.http.services.wedding-secure.loadbalancer.server.port=80"
    depends_on:
      - wedding-app

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
