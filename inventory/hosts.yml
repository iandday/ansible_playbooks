---
#
# inventory/hosts.yml
#

all:
  children: 
    downloader:
      hosts:
        downloader-01: 
          ansible_host: 10.168.1.31
          kvm_cores: 2
          kvm_memory: 5120
          kvm_storage: 150G
          kvm_node: 'pve-02'
          certificate_key: '{{ common_certificate_path }}/keys/{{ inventory_hostname }}.pem'
          certificate_csr: '{{ common_certificate_path }}/{{ inventory_hostname }}.csr'
          certificate: '{{ common_certificate_path }}/{{ inventory_hostname }}.crt'
          certificate_cn: '{{ inventory_hostname }}.{{ all_ext_domain }}'
          certificate_ip: '{{ ansible_host }}'
          certificate_san:
            - 'DNS:{{ certificate_cn }}'
            - 'IP:{{ certificate_ip }}'
            - 'DNS:gitlab.{{ all_ext_domain }}'
          docker_backup_dir: '/home/ansible/backup/docker_media'
          docker_compose_dirs:
            - media
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        docker_backup_username: svcDocker
        docker_backup_password: '{{ vault_docker_service_password }}'
        docker_media_lan_cidr: '{{ vault_docker_utility_mail_networks }}'
        docker_media_openvpn_passwd: '{{ vault_docker_media_openvpn_passwd }}'
        docker_media_staging_path: /mnt/staging
        docker_media_nas_staging: //freenas/staging
        docker_media_service_account: svcEmby
        docker_media_service_password: '{{ vault_emby_service_password }}'
        docker_media_nas_media: //freenas/tv'
        docker_media_media_path: '/mnt/media'
        docker_backup_day: 1
    seafile:
      hosts:
        seafile-01: 
          ansible_host: 10.168.1.18
          kvm_cores: 2
          kvm_memory: 5120
          kvm_storage: 150G
          kvm_node: 'pve-02'

          certificate_key: '{{ common_certificate_path }}/keys/{{ inventory_hostname }}.pem'
          certificate_csr: '{{ common_certificate_path }}/{{ inventory_hostname }}.csr'
          certificate: '{{ common_certificate_path }}/{{ inventory_hostname }}.crt'
          certificate_cn: '{{ inventory_hostname }}.{{ all_ext_domain }}'
          certificate_ip: '{{ ansible_host }}'
          certificate_san:
            - 'DNS:{{ certificate_cn }}'
            - 'IP:{{ certificate_ip }}'
            - 'DNS:files.{{ all_ext_domain }}'
          docker_compose_dirs:
            - seafile
          docker_backup_dir: '/home/ansible/backup/docker_seafile'
          
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        docker_backup_username: svcDocker
        docker_backup_password: '{{ vault_docker_service_password }}'
        kvm_description: 'docker for Seafile'
        docker_seafile_admin_username: '{{ vault_docker_seafile_admin_username }}'
        docker_seafile_admin_password: '{{ vault_docker_seafile_admin_password }}'
        docker_seafile_mysql_root_pw: '{{ vault_docker_seafile_mysql_root_pw }}'
    gitlab:
      hosts:
        gitlab-01: 
          ansible_host: 10.168.1.16
          kvm_cores: 2
          kvm_memory: 5120
          kvm_storage: 150G
          kvm_node: 'pve-02'
          certificate_key: '{{ common_certificate_path }}/keys/{{ inventory_hostname }}.pem'
          certificate_csr: '{{ common_certificate_path }}/{{ inventory_hostname }}.csr'
          certificate: '{{ common_certificate_path }}/{{ inventory_hostname }}.crt'
          certificate_cn: '{{ inventory_hostname }}.{{ all_ext_domain }}'
          certificate_ip: '{{ ansible_host }}'
          certificate_san:
            - 'DNS:{{ certificate_cn }}'
            - 'IP:{{ certificate_ip }}'
            - 'DNS:gitlab.{{ all_ext_domain }}'
          docker_gitlab_ad_account: '{{ vault_docker_gitlab_ad_account }}'
          docker_gitlab_ad_password: '{{ vault_docker_gitlab_ad_password }}'
          docker_backup_dir: '/home/ansible/backup/docker_gitlab'
          docker_compose_dirs:
            - gitlab
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        docker_backup_username: svcDocker
        docker_backup_password: '{{ vault_docker_service_password }}'
        kvm_description: 'docker for Gitlab Enterprise and Gitlab Runner'
    docker:
      hosts:
        docker-01: 
          ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
          ansible_host: 10.168.1.4
          kvm_cores: 2
          kvm_memory: 5120
          kvm_net: '{"net0":"virtio=52:47:2C:C9:AD:1B,bridge=vmbr0"}'
          kvm_node: 'pve-02'
          docker_networks:
            - traefik_proxy
          docker_nfs_path: 10.168.1.3:/mnt/Main/dockernfs
          cifs_shares:
            share1:
              cifs_comments: 'Homer Config'
              cifs_path: '{{ all_docker_storage }}/homer'
          cifs_user: docker
          cifs_password: '{{ vault_cifs_password_homer }}' 
          docker_compose_dirs:
            - utility
            - photos
            - netflow
          docker_utility_timezone: America/New_York
          docker_utility_godaddy_key: '{{ vault_docker_utility_godaddy_key }}' 
          docker_utility_godaddy_secret: '{{ vault_docker_utility_godaddy_secret }}'
          docker_utility_duo_svc_username: '{{ vault_docker_utility_duo_svc_username }}'
          docker_utility_duo_svc_pass: '{{ vault_docker_utility_duo_svc_pass }}'
          docker_utility_duo_svc_dn: '{{ vault_docker_utility_duo_svc_dn }}'
          docker_utility_duo_utm_group: '{{ vault_docker_utility_duo_utm_group }}'
          docker_utility_duo_utm_ikey: '{{ vault_docker_utility_duo_utm_ikey }}'
          docker_utility_duo_utm_skey: '{{ vault_docker_utility_duo_utm_skey }}'
          docker_utility_duo_utm_api: '{{ vault_docker_utility_duo_utm_api }}'
          docker_utility_bitwarden_admin_token: '{{ vault_docker_utility_bitwarden_admin_token }}'
          docker_utility_bitwarden_duo_ikey: '{{ vault_docker_utility_bitwarden_duo_ikey }}'
          docker_utility_bitwarden_duo_skey: '{{ vault_docker_utility_bitwarden_duo_skey }}'
          docker_utility_bitwarden_duo_api: '{{ vault_docker_utility_bitwarden_duo_api }}'
          docker_utility_mail_server: 'smtp.gmail.com'
          docker_utility_mail_port: '465'
          docker_utility_mail_username: '{{ vault_docker_utility_mail_username }}'
          docker_utility_mail_password: '{{ vault_docker_utility_mail_password }}'
          docker_utility_mail_hostname: '{{ vault_docker_utility_mail_hostname }}'
          docker_utility_mail_networks: '{{ vault_docker_utility_mail_networks }}'
          docker_utility_trafik_dashboard_auth: '{{ vault_docker_utility_trafik_dashboard_auth }}'
          docker_netflow_log_volume_path: '{{ all_docker_logs }}/netflow'
          docker_photos_sql_user_password: '{{ vault_docker_photos_sql_user_password }}'
          docker_photos_sql_root_password: '{{ vault_docker_photos_sql_root_password }}'
          docker_photos_admin_password: '{{ vault_docker_photos_admin_password }}'
          docker_photos_originals_path: '/mnt/photos'
          docker_photos_originals_nas: '//10.168.1.3/photos'
          docker_backup_dir: '/home/ansible/backup/docker'
          docker_kanban_postgres_password: '{{ vault_docker_kanban_postgres_password }}'
          docker_utility_authentik_pg_password: '{{ vault_docker_utility_authentik_pg_password }}'
          docker_utility_authentik_secret_key: '{{ vault_docker_utility_authentik_secret_key }}'
          docker_utility_maxmind_id: '{{ vault_docker_utility_maxmind_id }}'
          docker_utility_maxmind_key: '{{ vault_docker_utility_maxmind_key }}'
      vars:
        docker_backup_username: svcDocker
        docker_backup_password: '{{ vault_docker_service_password }}'
    nextcloud:
      hosts:
        nextcloud-04: 
          ansible_host: 10.168.1.5
          lxc_net: '{"net0":"name=eth0,gw={{ all_gateway }},ip={{ ansible_host}}/24,bridge=vmbr0"}'
          lxc_node: 'pve-02'
          lxc_cores: 2
          lxc_memory: 1024
          lxc_disk: 30
          lxc_storage: local-lvm
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        reboot_handler: reboot LXC
        mysql_root_password: '{{ vault_nextcloud_mysql_root_password }}'
        mysql_user: nextclouduser
        mysql_password: '{{ vault_nextcloud_mysql_password }}'
        mysql_database: nextcloud
        server_name: cloud.ianday.me
        nextcloud_admin_password: '{{ vault_nextcloud_admin_password}}'
        nextcloud_service_username: svcNextcloud
        nextcloud_service_password: '{{ vault_nextcloud_ldap_bind_password }}'
        nextcloud_user_password: '{{ vault_nextcloud_user_password }}'
        nextcloud_user_salt: '{{ vault_nextcloud_user_salt }}'
        nextcloud_trusted_proxy: '{{ vault_nextcloud_trusted_proxy }}'
        docker_cache_partition: '/dev/sdb1'
    wiki:
      hosts:
        wiki-04: 
          ansible_host: 10.168.1.7
          lxc_net: '{"net0":"name=eth0,gw={{ all_gateway }},ip={{ ansible_host}}/24,bridge=vmbr0"}'
          lxc_node: 'pve-01'
          lxc_cores: 2
          lxc_memory: 1024
          lxc_disk: 13
          lxc_storage: pve-data
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        reboot_handler: reboot LXC
    media:
      hosts:
        media-03: 
          ansible_host: 10.168.1.15
          lxc_net: '{"net0":"name=eth0,gw={{ all_gateway }},ip={{ ansible_host}}/24,bridge=vmbr0"}'
          lxc_node: 'pve-02'
          lxc_cores: 3
          lxc_memory: 3072
          lxc_disk: 90
          lxc_storage: local-lvm
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        reboot_handler: reboot LXC
        plex_media_path: '//freenas/media'
        plex_media_dest: '/mnt/media'
        plex_photo_path: '//freenas/photos'
        plex_photo_dest: '/mnt/photos'
        plex_service_username: svcEmby
        plex_service_password: '{{ vault_emby_service_password }}'
    dns:
      hosts:
        dns-01: 
          ansible_host: 10.168.1.8
          lxc_net: '{"net0":"name=eth0,gw={{ all_gateway }},ip={{ ansible_host}}/24,bridge=vmbr0"}'
          lxc_node: 'pve-02'
          lxc_cores: 2
          lxc_memory: 2048
          lxc_disk: 60
          lxc_storage: local-lvm
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        pihole_dns_servers:
          - 127.0.0.1#5353
          - 127.0.0.1#5353
        pihole_syslog_receiver: 10.168.1.41
        pihole_syslog_receiver_port: 656
        pihole_FTL_syslog_receiver: 10.168.1.41
        pihole_FTL_syslog_receiver_port: 657
        pihole_backup_dir: '{{ all_backup_root }}/pihole'
        pihole_service_username: '{{ vault_pihole_service_username }}'
        pihole_service_password: '{{ vault_pihole_service_password }}'
        pihole_uid: 1001
        pihole_gid: 1001
    unfi:
      hosts:
        unifi-01: 
          ansible_host: 10.168.1.28
          lxc_net: '{"net0":"name=eth0,gw={{ all_gateway }},ip={{ ansible_host}}/24,bridge=vmbr0"}'
          lxc_node: 'pve-02'
          lxc_cores: 2
          lxc_memory: 2048
          lxc_disk: 20
          lxc_storage: local-lvm
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        reboot_handler: reboot LXC
    music_streamer:
      hosts:
        mopidy-01: 
          ansible_host: 10.168.1.29
          lxc_net: '{"net0":"name=eth0,gw={{ all_gateway }},ip={{ ansible_host}}/24,bridge=vmbr0"}'
          lxc_node: 'pve-02'
          lxc_cores: 2
          lxc_memory: 1024
          lxc_disk: 12
          lxc_storage: realssd
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        reboot_handler: 'reboot LXC'
        mopidy_apt_list: 'deb https://apt.mopidy.com/ buster main contrib non-free'
        snapcast_sources:
          - 'source = pipe:///tmp/snapfifo?name=mopidy'
          - 'source = spotify:///librespot?name=spotify&devicename=Snapcast&bitrate=320'
        mopidy_jellyfin_host: '{{ vault_mopidy_jellyfin_host }}'
        mopidy_jellyfin_username: '{{ vault_mopidy_jellyfin_username }}'
        mopidy_jellyfin_password: '{[ vault_mopidy_jellyfin_password }}'
        mopidy_pandora_partner_encryption_key: '{{ vault_mopidy_pandora_partner_encryption_key }}'
        mopidy_pandora_partner_decryption_key: '{{ vault_mopidy_pandora_partner_decryption_key }}'
        mopidy_pandora_partner_password: '{{ vault_mopidy_pandora_partner_password }}'
        mopidy_pandora_username: '{{ vault_mopidy_pandora_username }}'
        mopidy_pandora_password: '{{ vault_mopidy_pandora_password }}'
    syslog:
      hosts:
        syslog-01:
          ansible_host: 10.168.1.41
          lxc_net: '{"net0":"name=eth0,gw={{ all_gateway }},ip={{ ansible_host}}/24,bridge=vmbr0"}'
          lxc_node: 'pve-02'
          lxc_cores: 1
          lxc_memory: 1024
          lxc_disk: 8
          lxc_storage: local-lvm
          syslog_ng_log_path: '{{ vault_syslog_ng_log_path }}'
          syslog_ng_opnsense_receive_port: 654
          syslog_ng_unifi_receive_port: 655
          syslog_ng_pihole_receive_port: 656
          syslog_ng_pihole_FTL_receive_port: 657
          syslog_ng_config:
            - opnsense.conf
            - pihole.conf
            - unifi.conf
          splunk_uf_admin_password: '{{ vault_splunk_admin_password }}'
          splunk_uf_inputs: 
            - {
              path: '/var/log/syslog-ng/opnsense/.../filterlog-*.log',
              host_segment: 5,
              sourcetype: 'opnsense',
              index: 'netfw',
              tz: 'GMT',
            }
            - {
              path: '/var/log/syslog-ng/opnsense/.../access-*.log',
              host_segment: 5,
              sourcetype: 'opnsense',
              index: 'netauth',
              tz: 'GMT',
            }
            - {
              path: '/var/log/syslog-ng/opnsense/.../dhcpd-*.log',
              host_segment: 5,
              sourcetype: 'opnsense',
              index: 'netdhcp',
              tz: 'GMT',
            }
            - {
              path: '/var/log/syslog-ng/opnsense/.../suricata-*.log',
              host_segment: 5,
              sourcetype: 'opnsense',
              index: 'netids',
              tz: 'GMT',
            }
            - {
              path: '/var/log/syslog-ng/opnsense/.../squid-*.log',
              host_segment: 5,
              sourcetype: 'opnsense',
              index: 'netproxy',
              tz: 'GMT',
            }
            - {
              path: '/var/log/syslog-ng/opnsense/.../lighttpd-*.log',
              host_segment: 5,
              sourcetype: 'opnsense',
              index: 'netproxy',
              tz: 'GMT',
            }
            - {
              path: '/var/log/syslog-ng/opnsense/.../openvpn-*.log',
              host_segment: 5,
              sourcetype: 'opnsense',
              index: 'netvpn',
              tz: 'GMT',
            }
            - {
              path: '/var/log/syslog-ng/opnsense/.../cron-*.log',
              host_segment: 5,
              sourcetype: 'opnsense',
              index: 'netfwsystem',
              tz: 'GMT',
            }
            - {
              path: '/var/log/syslog-ng/opnsense/.../catchall-*.log',
              host_segment: 5,
              sourcetype: 'opnsense',
              index: 'netfwsystem',
              tz: 'GMT',
            }
            - {
              path: '/var/log/syslog-ng/pihole/.../pihole-*.log',
              host_segment: 5,
              sourcetype: 'pihole',
              index: 'dns',
              tz: 'EST',
            }
            - {
              path: '/var/log/syslog-ng/pihole/.../pihole-FTL-*.log',
              host_segment: 5,
              sourcetype: 'pihole:ftl',
              index: 'dns_system',
              tz: 'EST',
            }
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        reboot_handler: reboot LXC
        syslog_ng_log_service_username: '{{ vault_syslog_ng_log_service_username }}'
        syslog_ng_log_service_password: '{{ vault_syslog_ng_log_service_password }}'
    splunk:
      hosts:
        splunk-02: 
          ansible_host: 10.168.1.40
          lxc_net: '{"net0":"name=eth0,gw={{ all_gateway }},ip={{ ansible_host}}/24,bridge=vmbr0"}'
          lxc_node: 'pve-02'
          lxc_cores: 3
          lxc_memory: 2048
          lxc_disk: 300
          lxc_storage: local-lvm
          lxc_mounts: '{"mp0":"/mnt/pve/backup,mp=/home/ansible/backup"}'
          splunk_admin_password: '{{ vault_splunk_admin_password }}'
          splunk_custom_indexes:
            - netfw
            - netauth
            - netdhcp
            - netids
            - netproxy
            - netvpn
            - netfwsystem
            - dns
            - dns_system
      vars:
        ansible_python_interpreter: '{{ all_ansible_python_interpreter }}'
        reboot_handler: reboot LXC

  vars:
    reboot_handler: reboot
    common_certificate_path: '{{ playbook_dir }}/inventory/certificates'
    common_root_ca_key: '{{ common_certificate_path }}/keys/CA_key.pem'
    common_root_ca_cert: '{{ common_certificate_path }}/CA.crt'
    common_root_ca_csr: '{{ common_certificate_path }}/CA.csr'
    #lxc_mounts: '{"mp0":"/mnt/pve/backup,mp=/home/ansible/backup"}'